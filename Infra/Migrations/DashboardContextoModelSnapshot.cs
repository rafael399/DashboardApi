// <auto-generated />
using System;
using Infra.Contextos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infra.Migrations
{
    [DbContext(typeof(DashboardContexto))]
    partial class DashboardContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("Dominio.Entidades.Encomenda", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("IdEquipe")
                        .HasColumnType("INTEGER");

                    b.Property<short>("IdPedido")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdEquipe");

                    b.HasIndex("IdPedido")
                        .IsUnique();

                    b.ToTable("Encomendas");
                });

            modelBuilder.Entity("Dominio.Entidades.Equipe", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlacaVeiculo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Equipes");
                });

            modelBuilder.Entity("Dominio.Entidades.Pedido", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataEntrega")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Dominio.Entidades.PedidoProduto", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("IdPedido")
                        .HasColumnType("INTEGER");

                    b.Property<short>("IdProduto")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdProduto");

                    b.ToTable("PedidosProdutos");
                });

            modelBuilder.Entity("Dominio.Entidades.Produto", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<float>("Valor")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Dominio.Entidades.Encomenda", b =>
                {
                    b.HasOne("Dominio.Entidades.Equipe", "Equipe")
                        .WithMany("Encomendas")
                        .HasForeignKey("IdEquipe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Pedido", "Pedido")
                        .WithOne("Encomenda")
                        .HasForeignKey("Dominio.Entidades.Encomenda", "IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipe");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Dominio.Entidades.PedidoProduto", b =>
                {
                    b.HasOne("Dominio.Entidades.Pedido", "Pedido")
                        .WithMany("Produtos")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Dominio.Entidades.Equipe", b =>
                {
                    b.Navigation("Encomendas");
                });

            modelBuilder.Entity("Dominio.Entidades.Pedido", b =>
                {
                    b.Navigation("Encomenda");

                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
